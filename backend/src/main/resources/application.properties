# Server configuration
server.port=8080

# Database Configuration (PostgreSQL) - Utilisez des variables d'environnement Docker
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/messagerie_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:sikatipierre5.0} 
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA and Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# WebSocket Configuration
spring.websocket.server.port=8080

# CORS Configuration (pour permettre au frontend React de communiquer avec le backend)
spring.mvc.cors.enabled=true
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.allowed-origins=http://localhost:3000,http://localhost # Ajout de localhost pour le Docker Compose du frontend
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.exposed-headers=Location
spring.mvc.cors.max-age=3600