version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: your_database_name # Remplacez par le nom de votre BDD
      POSTGRES_USER: your_username    # Remplacez par votre nom d'utilisateur
      POSTGRES_PASSWORD: your_password # Remplacez par votre mot de passe fort
    ports:
      - "5432:5432" # Mappe le port 5432 du conteneur au port 5432 de l'hôte
    volumes:
      - db_data:/var/lib/postgresql/data # Volume persistant pour les données
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_username -d your_database_name"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend # Chemin vers le dossier de votre backend Spring Boot
      dockerfile: Dockerfile
    container_name: backend_app
    ports:
      - "8080:8080" # Mappe le port 8080 du conteneur au port 8080 de l'hôte
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/your_database_name
      SPRING_DATASOURCE_USERNAME: your_username
      SPRING_DATASOURCE_PASSWORD: your_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update # Ou create pour la première fois
    depends_on:
      db:
        condition: service_healthy # Attend que la BDD soit saine avant de démarrer
    restart: always

volumes:
  db_data: # Définition du volume