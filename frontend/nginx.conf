# Configuration Nginx pour servir l'application React
server {
  listen 80; # Écoute sur le port 80

  # Définissez le répertoire racine de votre application React construite
  root /usr/share/nginx/html;

  # Spécifiez le fichier d'index
  index index.html index.htm;

  # Gérez les requêtes pour l'application React (pour le routage client-side)
  location / {
    try_files $uri $uri/ /index.html; # Essaie de servir le fichier, sinon retourne index.html pour le routage de React
  }

  # Proxy les requêtes vers le backend Spring Boot
  # Toutes les requêtes commençant par /api seront redirigées vers le service backend
  location /api {
    proxy_pass http://backend:8080; # 'backend' est le nom du service dans docker-compose.yml
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  # Proxy les requêtes WebSocket vers le backend Spring Boot
  # Toutes les requêtes commençant par /ws (pour les WebSockets) seront redirigées
  location /ws {
    proxy_pass http://backend:8080; # 'backend' est le nom du service dans docker-compose.yml
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }
}
